version: "3.9"

services:
  app: &app
    container_name: instabug_task
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        APP_USER_ID: ${APP_USER_ID}
    env_file: .env
    volumes:
      - .:/home/instabug-user/instabug-task:cached
      - bundle:/bundle
      - ~/.ssh:/home/instabug-user/.ssh
      - node_modules:/home/instabug-user/instabug-task/node_modules
      - rails_cache:/home/instabug-user/instabug-task/tmp/cache
      - ~/.gitconfig:/etc/gitconfig
    tmpfs:
      - /tmp
    ports:
      - "3000:3000"
    tty: true
    stdin_open: true
    depends_on:
      - development_db
      - test_db
    networks:
      - instabug_task_private_network
    entrypoint: [ "/home/instabug-user/entrypoint.sh" ]
    command:
      [
        "rails",
        "server",
        "-b",
        "0.0.0.0",
        "-p",
        "3000",
        "-e",
        "development"
      ]

  development_db: &development_db
    container_name: instabug_task_development_db
    image: mysql:5.7
    # ports:
    #   - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DEVELOPMENT_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DEVELOPMENT_DB_NAME}
      MYSQL_USER: ${DEVELOPMENT_DB_USERNAME}
      MYSQL_PASSWORD: ${DEVELOPMENT_DB_PASSWORD}
    volumes:
      - development_db:/var/lib/mysql
    networks:
      - instabug_task_private_network

  test_db: &test_db
    container_name: instabug_task_test_db
    image: mysql:5.7
    # ports:
    #   - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${TEST_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${TEST_DB_NAME}
      MYSQL_USER: ${TEST_DB_USERNAME}
      MYSQL_PASSWORD: ${TEST_DB_PASSWORD}
    volumes:
      - test_db:/var/lib/mysql
    networks:
      - instabug_task_private_network

  redis:
    image: redis:7-alpine
    container_name: instabug_task_redis
    ports:
      - "${REDIS_PORT:-16379}:6379"
    volumes:
      - redis_data:/data
    env_file: .env
    networks:
      - instabug_task_private_network

  worker:
    <<: *app
    container_name: instabug_task_worker
    command: sidekiq
    depends_on:
      - app
      - redis
    ports: []
    entrypoint: ""

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: instabug_task_elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    networks:
      - instabug_task_private_network

volumes:
  bundle:
  development_db:
  test_db:
  rails_cache:
  node_modules:
  redis_data:
  elasticsearch:


networks:
  instabug_task_private_network:
    external: true
